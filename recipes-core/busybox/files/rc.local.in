#! /bin/sh

PATH=/usr/local/sbin:/usr/local/bin:/sbin:/bin:/usr/sbin:/usr/bin

do_start() {
	MTDBLOCK_LIST=`cat /proc/cmdline | sed 's/ /\n/g' | grep "^mtdblock" | sort`
	MTDBLOCK_LIST_NUM=`cat /proc/cmdline | sed 's/ /\n/g' | grep "^mtdblock" | wc -l`
	MTDBLOCK_DEV_NUM=`find /dev/mtdblock* 2>/dev/null | wc -l`

	for i in `seq 1 ${MTDBLOCK_LIST_NUM}`; do
		PARAM=`echo ${MTDBLOCK_LIST} | sed -n ${i}p | cut -d= -f2`
		DIR=`echo ${MTDBLOCK_LIST} | sed -n ${i}p | cut -d= -f2 | cut -d, -f1`

		DEVICE="/dev/mtdblock$(( ${MTDBLOCK_DEV_NUM} + ${i} - 1 ))"

		printf "Create phram ${DEVICE}.\n"
		logger -p user.info "Create phram ${DEVICE}."
		echo "${PARAM}" > /sys/module/phram/parameters/phram

		for k in `seq 1 10`; do
			if [ -e ${DEVICE} ]; then
				break;
			fi
			if [ ${k} -eq 10 ]; then
				printf "Cannot create phram ${DEVICE}.\n"
				logger -p user.mount "Cannot create phram ${DEVICE}."
			fi
			usleep 200000
		done

		printf "Mount ${DEVICE} at ${DIR}.\n"
		logger -p user.info "Mount ${DEVICE} at ${DIR}."
		mount ${DEVICE} ${DIR}

		for k in `seq 1 50`; do
			mountpoint -q ${DIR}
			if [ $? -eq 0 ]; then
				printf "${DEVICE} is mounted.\n"
				logger -p user.info "${DEVICE} is mounted."
				break;
			fi
			if [ ${k} -eq 1 ]; then
				printf "Waiting for mount ${DEVICE}...\n"
				logger -p user.info "Waiting for mount ${DEVICE}..."
			fi
			if [ ${k} -eq 50 ]; then
				printf "Cannot mount ${DEVICE}.\n"
				logger -p user.error "Cannot mount ${DEVICE}."
			fi
			usleep 200000
		done
	done

	if [ -x /opt/@@QUINCE_OPT_PACKAGE_NAME@@/etc/rc.local ]; then
		printf "Execute local script. (/opt/@@QUINCE_OPT_PACKAGE_NAME@@/etc/rc.local start)\n"
		logger -p user.info "Execute local script. (/opt/@@QUINCE_OPT_PACKAGE_NAME@@/etc/rc.local start)"
		/opt/@@QUINCE_OPT_PACKAGE_NAME@@/etc/rc.local start
		ES=$?
		return ${ES}
	else
		printf "Skipped local script execution. (/opt/@@QUINCE_OPT_PACKAGE_NAME@@/etc/rc.local start)\n"
		logger -p user.info "Skipped local script execution. (/opt/@@QUINCE_OPT_PACKAGE_NAME@@/etc/rc.local start)"
	fi
}

do_stop() {
	if [ -x /opt/@@DISTRO@@/etc/rc.local ]; then
		printf "Execute local script. (/opt/@@DISTRO@@/etc/rc.local stop)\n"
		logger -p user.info "Execute local script. (/opt/@@DISTRO@@/etc/rc.local stop)"
		/opt/@@DISTRO@@/etc/rc.local stop
		ES=$?
		return ${ES}
	else
		printf "Skipped local script execution. (/opt/@@DISTRO@@/etc/rc.local stop)\n"
		logger -p user.info "Skipped local script execution. (/opt/@@DISTRO@@/etc/rc.local stop)"
	fi
}

case "$1" in
	start)
		do_start
		;;
	stop)
		do_stop
		;;
	restart|reload|force-reload)
		echo "Error: argument '$1' not supported" >&2
		exit 3
		;;
	*)
		echo "Usage: $0 start|stop" >&2
		exit 3
		;;
esac

